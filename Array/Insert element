import java.util.*;
class GFG {
    static int insert(int arr[], int n, int x, int cap, int pos) {
        if (n == cap) {
            System.out.println("Insertion failed: Array is full.");
            return n;
        }
        int idx = pos - 1;
        for (int i = n - 1; i >= idx; i--) {
            arr[i + 1] = arr[i];
        }
        arr[idx] = x;
        return n + 1;
    }
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter the capacity of the array: ");
        int cap = sc.nextInt();
        int arr[] = new int[cap];
        System.out.print("Enter the number of elements (<= capacity): ");
        int n = sc.nextInt();
        System.out.println("Enter " + n + " elements:");
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        System.out.println("Before Insertion:");
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();
        System.out.print("Enter the element to insert: ");
        int x = sc.nextInt();
        System.out.print("Enter the position to insert (1-based index): ");
        int pos = sc.nextInt();
        if (pos < 1 || pos > n + 1) {
            System.out.println("Invalid position! Position should be between 1 and " + (n + 1));
        } else {
            n = insert(arr, n, x, cap, pos);
            System.out.println("After Insertion:");
            for (int i = 0; i < n; i++) {
                System.out.print(arr[i] + " ");
            }
        }
        sc.close();
    }
}

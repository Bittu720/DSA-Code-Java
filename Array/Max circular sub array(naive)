import java.util.Scanner;
class GFG {
    static int kadane(int arr[], int n) {
        int maxEnding = arr[0], res = arr[0];

        for (int i = 1; i < n; i++) {
            maxEnding = Math.max(arr[i], maxEnding + arr[i]);
            res = Math.max(res, maxEnding);
        }
        return res;
    }
    static int maxCircularSum(int arr[], int n) {
        int maxKadane = kadane(arr, n); 
        int arrSum = 0;
        for (int i = 0; i < n; i++) {
            arrSum += arr[i];
            arr[i] = -arr[i]; 
        }
        int minKadane = kadane(arr, n); 
        int maxCircular = arrSum + minKadane; 
        return (maxCircular == 0) ? maxKadane : Math.max(maxKadane, maxCircular);
    }
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter the number of elements: ");
        int n = sc.nextInt();
        int[] arr = new int[n];
        System.out.println("Enter the elements:");
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        sc.close();  
        System.out.println("Maximum circular subarray sum: " + maxCircularSum(arr, n));
    }
}
